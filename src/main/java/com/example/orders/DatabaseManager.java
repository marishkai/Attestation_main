package com.example.orders;

import org.flywaydb.core.Flyway;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.Properties;

public class DatabaseManager {
    private final String url;
    private final String username;
    private final String password;

    public DatabaseManager(String url, String username, String password) {
        this.url = url;
        this.username = username;
        this.password = password;
    }

    public Connection getConnection() throws Exception {
        return DriverManager.getConnection(url, username, password);
    }

    public void migrate() {
        System.out.println("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π Flyway...");

        try {
            Flyway flyway = Flyway.configure()
                    .dataSource(url, username, password)
                    .locations("classpath:db/migration")
                    .baselineOnMigrate(true)
                    .cleanDisabled(false) // –†–∞–∑—Ä–µ—à–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                    .load();

            // –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –æ—á–∏—â–∞–µ–º –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –±–∞–∑—É
            flyway.clean();
            flyway.migrate();

            System.out.println("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ Flyway –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ");

        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ Flyway: " + e.getMessage());
            System.out.println("üîÑ –ü–æ–ø—ã—Ç–∫–∞ —Ä—É—á–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏...");
            manualMigration();
        }
    }

    private void manualMigration() {
        try (Connection connection = getConnection();
             var statement = connection.createStatement()) {

            System.out.println("üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤—Ä—É—á–Ω—É—é...");

            // –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π
            String schema = readResourceFile("db/migration/V1__Create_schema.sql");
            statement.execute(schema);

            String testData = readResourceFile("db/migration/V2__Insert_test_data.sql");
            statement.execute(testData);

            System.out.println("‚úÖ –†—É—á–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ");

        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏: " + e.getMessage());
            throw new RuntimeException("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏", e);
        }
    }

    private String readResourceFile(String resourcePath) {
        try {
            var inputStream = getClass().getClassLoader().getResourceAsStream(resourcePath);
            if (inputStream == null) {
                throw new RuntimeException("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: " + resourcePath);
            }
            return new String(inputStream.readAllBytes(), "UTF-8");
        } catch (Exception e) {
            throw new RuntimeException("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: " + resourcePath, e);
        }
    }

    public static DatabaseManager fromProperties() {
        try {
            Properties properties = new Properties();
            var inputStream = DatabaseManager.class.getClassLoader()
                    .getResourceAsStream("application.properties");

            if (inputStream == null) {
                return new DatabaseManager(
                        "jdbc:postgresql://localhost:5432/order_management",
                        "postgres",
                        "password"
                );
            }

            properties.load(inputStream);

            String url = properties.getProperty("db.url");
            String username = properties.getProperty("db.username");
            String password = properties.getProperty("db.password");

            return new DatabaseManager(
                    url != null ? url : "jdbc:postgresql://localhost:5432/order_management",
                    username != null ? username : "postgres",
                    password != null ? password : "password"
            );

        } catch (Exception e) {
            System.err.println("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: " + e.getMessage());
            return new DatabaseManager(
                    "jdbc:postgresql://localhost:5432/order_management",
                    "postgres",
                    "password"
            );
        }
    }
}